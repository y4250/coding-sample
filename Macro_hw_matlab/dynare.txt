%% Labeling block
% Endogenous variables (8) - in logs:
var
 y % Output
 I % Investment
 k % Capital
 l % Labor
 z % Productivity
 c % Consumption
 w % Real wage
 r % Interest rate
 ;
% Exogenous variable (productivity shock):
varexo eps_z;
%% Parameters block
parameters phi alpha delta rho beta;
parameters r_ss l_ss k_ss y_ss w_ss c_ss i_ss z_ss;
% Set model parameters
load para.mat;
set_param_value('phi',phi);
set_param_value('alpha',alpha);
set_param_value('delta',delta);
set_param_value('rho',rho);
set_param_value('beta',beta);
% Steady state
r_ss = 1/ beta -(1- delta);
l_ss = 1/(1+ phi /(1- phi)/(1- alpha)*(1- alpha*delta/r_ss));
k_ss = l_ss *( alpha/r_ss)^(1/(1 - alpha));
y_ss = k_ss^alpha*l_ss ^(1- alpha);
w_ss = (1- alpha)*y_ss/l_ss;
c_ss = y_ss - delta*k_ss;
i_ss = delta*k_ss;
z_ss = 0;

%% Model block
% Equilibrium conditions in logs , for log-linearization (8):
model;
% Euler:
1/exp(c) = beta/exp(c(+1))*(1- delta+exp(r(+1)));
% Labor supply
phi/(1-exp(l)) = w *(1-phi)/exp(c);
% Production function:
exp(y) = exp(z)*(exp(k(-1))^alpha)*(exp(l)^(1- alpha));
% Market clearing
exp(y) = exp(c)+exp(I);
% FOC of capital
exp(r) = alpha*exp(y)/exp(k);
% FOC of labor
exp(w) = (1-alpha)*exp(y)/exp(l);
% Motion of capital
exp(k) = (1-delta)*exp(k(-1))+exp(I);
% Shock equation (already in log-form)
z = rho*z(-1) + eps_z;
end;

%% Initial Block
initval;
y = log(y_ss);
I = log(i_ss);
k = log(k_ss);
l = log(l_ss);
z = 0;
c = log(c_ss);
w = log(w_ss);
r = log(r_ss);
end;
% Compute the steady state:
steady(maxit =10000);
check; % Check that the steady state is indeed found

% Variance of shocks:
shocks;
var eps_z; stderr log(1.01);
end;

%% Solution block
% Perform the simulation of the model. Get results for specified variables:
stoch_simul (order =1,irf =100 , noprint , nodisplay ) y c I l k w r z;
% Store the results:
savefile = 'simulation.mat';
save(savefile , 'oo_');


